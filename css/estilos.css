/* estilos.css */
@import url('https://fonts.googleapis.com/css2?family=Noto+Sans:wght@400;700&family=Raleway:wght@400;700;800&display=swap');

* {
    box-sizing: border-box;
}

/* Declarando font-size para o elemento raiz (html).
IMPORTANTE esta confg permitirá o uso da medida em varios lugares no css
Exemplo: 1rem equilave a 14px*/


html {
    font-size: 14px;
}

body {
    background-color: E9E9E9;
    font-family: 'Noto Sans', sans-serif;
    display: flex;
    min-height: 100vh;
    flex-direction: column;
}

/* Solução para o rodapé -
- Usamos o flex: 1; para garantir que a main ocupará todo o espaço disponível no body (que, já segue o tamanho da viewport). */

main {
    flex: 1;
}

/* CSS Reset técnica de limpeza de formatações pré existentes nos navegadores nesse exemplo abaixo estamos resetando apenas alguns elementos do site*/
body,
h1,
h2,
p,
figure,
.menu {
    margin: 0;
    padding: 0;
}

h1 {
    font-family: 'Raleway', sans-serif;
    text-transform: uppercase;
    font-weight: 800;
    font-size: 1.5rem;
}

h1 a {
    background-color: #0d0000;
    color: #fffffa;
    border-radius: 5px;
    padding: 0.3rem 1rem;
}

a {
    text-decoration: none;
}

header {
    /*VH- viewport height (altura de wiewport) usando essa medida garantimos que a relação de tamanho é a tela (viewport) . Neste caso, cerca de 12 unidades da altura da tela. */
    /* Deixar o cabeçário fixo no topo da tela */
    position: sticky;
    top: 0;
    background-color: white;
    z-index: 10;
}

header .limitador {
    height: 12vh;
    display: flex;
    justify-content: space-between;
    align-items: center;
}


nav h2 a {
    color: #0d0000;
    font-size: 1.2rem;
    padding: 1rem;
    display: inline-block;
}

nav h2 a:hover, nav h2 a:focus,
.menu a:hover, .menu a:focus {
    background-color: #817d7d;
}

.menu {
    list-style: none;

    /* esta propriedade vai ser usada posterioriormente para esconder a lista de links */
    display: none;
}

.menu a {
    color: #0d0000;
    font-weight: bold;
    display: flex;
    height: 50px;
    justify-content: center;
    align-items: center;
}

/*ATENÇÂO!
Esta regra a baixo so irá funcionar com o auxílio de programação JS.
OBJETIVO : quando duas classes estiverem combinadas ('menu' e 'aberto'). O menu será exibido completamente.*/
.menu.aberto {
    display: flex;
    flex-direction: column;
    background-color: white;

    position: absolute;
    right: 0;
    left: 0;
}

.destaque {
    background-image: url(../imagens/fundo-destaque.jpg);

    height: 88vh;

    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;

    background-size: cover;
    background-attachment: fixed;
}

.destaque h2,
.destaque p {
    color: white;
    text-align: center;
}

.destaque h2 {
    /*Fonte responsiva usando a função: clamp(tamanho mínimo,
    tamanho real,
    tamanho máximo */
    font-size: clamp(3rem, 10vw, 7rem);
    font-weight: 800;
    /* etapa 2: chamar
    e configurar a execução
    da animação */
    animation-name: aparecer;
    animation-duration: 3s;
    /* animation-iteration-count: infinite; 
    animation-direction: alternate;*/
}

.destaque p {
    font-size: clamp(1.5rem, 3vw, 3rem);
    text-align: center;

    animation-name: aparecer;
    animation-duration: 3s;
    animation-delay: 2s;

    /* Usamos a propriedade valor/
    abaixo a forçar animação
    a iniciar (apos os 2s) já
    com a opacidade zerada, o
    tamanho menor e posição diferente. */
    animation-fill-mode: backwards;
}

/* Etapa 1
Criar uma regra de animação */
@keyframes aparecer {

    /*  De (como inicia) */
    from {
        opacity: 0;
        transform:
            scale(0.1) translateY(-600px);

    }

    /* para (como termina)*/
    to {
        opacity: 1;
        transform:
            scale(1) translateY(0);

    }

}


/* Tornando as imagens
 responsivas/flexíveis */
img {
    max-width: 100%;
}

article h2 {
    padding: 1rem;
    font-size: 2rem;
    font-family: "raleway", sans-serif;
    color: #6b6b6b;

}

article p,
article address {
    padding: 0.5rem 0;
    font-size: 1.3rem;
}

article address {
    font-style: normal;
}

/* Alinhamento dos articles Somente que tenham as classes indicadas */
.front-end,
.historia,
.localizacao {
    text-align: center;

}

/* Exercícios */

/* 1)Crie uma regra para formatar o artigo de historia da Internet com:
-Plano de fundo: imagem"fundo madeira"
-Deixe a imagem parada e cobrindo todo o  espaço */

/* 2) Crie uma regra para formatar o título História da Internet com a cor branca e uma sombra no texto*/

/* 3) Crie uma regra para formatar o vídeo do Historia da Internet com:
-largura de 700px
-margem inferior de 2rem */

/* 4) Crie uma regra para formatar o mapa da localização com:
-largura de 100%
-margem superior de 2rem */

/* 5) Crie uma regra para formatar somente o figure do Front-end com::after
-margem superior/inferior de 2rem, e esquerda/direita automatica
-conteudo centralizado */

/* 6) A) Crie uma classe chamada "limitador" com largura de 95vw e margem automática.
B) Aplique esta classe no cabeçalho, artigo Front-end, e informações de localização.*/

.historia {
    background-image: url(../imagens/fundo-madeira.jpg);
    background-attachment: fixed;
}

article.historia h2 {
    color: white;
    text-shadow: 2px 2px black;
}

.historia iframe {
    width: 100%;
    max-width: 700px;
    margin-bottom: 2rem;
}

.localizacao iframe {
    width: 100%;
    margin-top: 2rem;
}

.front-end figure {
    margin: 2rem auto;
}

.limitador {
    width: 95vw;
    margin: auto;
}

footer {
    background-color: #0d0000;
    color: white;
    height: 30vh;
    font-weight: bold;
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
}

/* Regras para paáginas internas de produtos, seviços e contatos  */
.conteudo {
    background-color: #fbfbfb;
    padding: 0.5rem;
    border-radius: 8px;
}

.conteudo h2 {
    padding-left: 0%;
    text-align: center;
    border-bottom: solid 1px;
}

table,
th,
td {
    border: solid 2px black;
    border-collapse: collapse;
}

table {
    width: 80%;
    max-width: 600px;
    margin: auto;
}

caption {
    text-transform: uppercase;
    font-weight: bold;
    font-size: 1.2rem;
    padding: 0.8rem;
    padding-bottom: 0.5rem;
}

th {
    background-color: #0d0000;
    color: #fffffa;
    padding: 0.7rem;
    font-size: 1.1rem;
    width: 33.33rem;
}

td {
    padding: 2%;
    font-size: 1.1rem;
}

/* Pseudo classes de seleção */

td:last-child {
    text-align: right;
}

td:first-child {
    text-transform: uppercase;
}

td:nth-child(2) {
    text-align: center;
}

td:last-child::before {
    content: "R$"
}

tr:nth-child(odd) {
    background-color: #949292;
}

tr:nth-child(even) {
    background-color: #fbfbfb;
}

.conteudo figure {
    text-align: center;

}

.conteudo figure img {
    border-radius: 50%;
    box-shadow: 0 0 25px black;
    margin: 10px;
    filter: grayscale(100%);
    transition: 0.5s;
}

.conteudo figure img:hover {
    filter: grayscale(0%);
    scale: 1.1;
}

form {
    width: 95%;
    max-width: 600px;
    margin: auto;
    padding: 1rem;
    background-color: rgb(212, 215, 216);
    border-radius: 8px;
}

input:not([type=radio]):not([type=checkbox]),
select,
textarea {
    border: none;
    padding: 1%;
    width: 100%;
    box-shadow: darkgray 0 0 5px;
    height: 40px;
}

textarea {
    height: auto;
}

label {
    font-size: 1.3rem;
}

form div {
    margin-top: 1rem;
}

button {
    border: none;
    background-color: #0d0000;
    color: white;
    padding: 1rem;
    font-weight: bold;
}

button:hover, button:focus {
    background-color: #0d0000;
    cursor: pointer;
}

@media screen and (min-width:530px) {
    nav h2 a {
        display: none;   
    }

    .menu {
        display: flex;
    }

    nav {
        width: 70%;

    }

    .menu li {
        width: 100%;
    }

    .front-end figure img {
        height: 150px;
    }
}


@media screen and (min-width:800px) {
    html {
        font-size: 18px;
    }
    
    .limitador {
        max-width: 1100px;
    }
}    








